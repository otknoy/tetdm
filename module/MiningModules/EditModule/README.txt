テキストの編集，保存，行番号の追加が行えます
エディタ(EditModule(ID=1))

・対応する可視化ツール：
テキスト(TextDisplay(ID=1))


「パネルセット」ボタンで、テキスト(TextDisplay(ID=1))との組み合わせにセットします。


対応する可視化ツールとともに利用することで、以下の動作をします。
なお入力テキストとは、オリジナルのテキストをコピーして作成したテキストを指し、
保存を行っても、オリジナルのテキストの内容が上書きされることはありません。

ボタン：
「編集キャンセル」：最後に保存したときの状態に戻します。
「編集保存+実行」：表示されているテキストを入力テキストとしてファイルに保存し、全ツールが処理を再実行します。
「タグカット」：セグメントの区切り記号を消去します。
「改行で句点」：改行があるところに、句点を挿入します。（空の文は作成しません）
「空行で分割」：空行があるところに、セグメントの区切り記号を挿入します。（空のセグメントは作成しません）
「行番号」：行番号付きの入力テキストを表示します。



[作者とライセンス情報]

・作者：砂山渡
・本モジュールの利用許諾について，TETDMサイト(http://tetdm.jp/)内のTETDM利用許諾書（http://tetdm.jp/pukiwiki/index.php?plugin=attach&refer=TETDM統合環境&openfile=license.txt）の内容をそのまま適用します．


[モジュール開発者向け情報]
-----
[README.txt for MINING MODULE]  :  EditModule

     ・処理内容の説明（メソッドminingOperations内のcase文の説明）：
case 0:入力テキストデータを送信
case 1:テキストデータをファイルから再読み込み
case 3:セグメントの区切りを消去
case 4:句点を挿入
case 5:セグメントの区切りを挿入
case 6:入力テキストデータに行番号を付与したテキストを生成して送信

     ・出力データの説明（引数の型情報を追加して下さい）：
setDataString(0,text.originalText);	String型	入力テキストデータ
setDataString(1,numberedText);		String型	入力テキストデータに行番号を付与したテキスト
setDataString(1,editedText);		String型	入力テキストデータに句点やセグメント区切りを付与したテキスト

     ・クラス情報：
public class EditModule extends MiningModule implements ActionListener

     ・フォーカス型変数の利用：なし
     ・フォーカス情報による処理連動フラグ(連動実行)：なし
     ・オプションによる可視化連動(連動要請)：なし
     ・オプションによる処理連動(連動要請)：なし
     ・データ取得による処理連動(連動要請)：なし
